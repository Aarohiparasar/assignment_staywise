"use client";

import { useState } from "react";
import Link from "next/link";
import { usePathname } from "next/navigation";
import { Geist, Geist_Mono } from "next/font/google";
import { HomeOutlined, BankOutlined, BookOutlined, LoginOutlined, UserAddOutlined } from "@ant-design/icons";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const pathname = usePathname();

  const navItems = [
    { label: "StayWise", href: "/", icon: <HomeOutlined /> },
    { label: "Properties", href: "/properties", icon: <BankOutlined /> },
    { label: "My Bookings", href: "/bookings", icon: <BookOutlined /> },
  ];

  const authItems = [
    { label: "Login", href: "/login", icon: <LoginOutlined /> },
    { label: "Signup", href: "/signup", icon: <UserAddOutlined /> },
  ];

  const isActive = (path: string) => pathname === path;

  return (
    <html lang="en">
      <head>
        <title>StayWise</title>
        <meta name="description" content="Generated by create next app" />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-gray-50`}
      >
        <nav className="w-full border-b p-4 flex flex-wrap items-center gap-4">
          {/* StayWise logo/text */}
          <Link
            href="/"
            className="flex items-center gap-2 font-extrabold text-2xl text-blue-600 hover:text-blue-700 transition"
          >
            <HomeOutlined style={{ fontSize: "28px" }} />
            StayWise
          </Link>

          {navItems.slice(1).map((item) => (
            <Link
              key={item.href}
              href={item.href}
              className={`flex items-center gap-1 px-3 py-1 rounded transition-colors ${
                isActive(item.href) ? "text-blue-600" : "text-gray-700 hover:text-blue-500"
              }`}
            >
              {item.icon}
              {item.label}
            </Link>
          ))}

          <span className="ml-auto flex gap-3">
            {authItems.map((item) => (
              <Link
                key={item.href}
                href={item.href}
                className={`flex items-center gap-1 px-3 py-1 rounded transition-colors ${
                  isActive(item.href) ? "text-blue-600" : "text-gray-700 hover:text-blue-500"
                }`}
              >
                {item.icon}
                {item.label}
              </Link>
            ))}
          </span>
        </nav>

        <main className="px-1 md:px-1 py-1">{children}</main>
      </body>
    </html>
  );
}
