"use client";

import { useState } from "react";
import Link from "next/link";
import { usePathname } from "next/navigation";
import { Geist, Geist_Mono } from "next/font/google";
import {
  HomeOutlined,
  BankOutlined,
  BookOutlined,
  LoginOutlined,
  UserAddOutlined,
  MenuOutlined,
  CloseOutlined,
} from "@ant-design/icons";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const pathname = usePathname();
  const [menuOpen, setMenuOpen] = useState(false);

  const navItems = [
    { label: "StayWise", href: "/", icon: <HomeOutlined /> },
    { label: "Properties", href: "/properties", icon: <BankOutlined /> },
    { label: "My Bookings", href: "/bookings", icon: <BookOutlined /> },
  ];

  const authItems = [
    { label: "Login", href: "/login", icon: <LoginOutlined /> },
    { label: "Signup", href: "/signup", icon: <UserAddOutlined /> },
  ];

  const isActive = (path: string) => pathname === path;

  return (
    <html lang="en">
      <head>
        <title>StayWise</title>
        <meta name="description" content="Generated by create next app" />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-gray-50`}
      >
        {/* Navbar */}
        <nav className="w-full border-b p-4 flex flex-wrap items-center gap-4 border-b-blue-600 relative">
          {/* Mobile Menu Button */}
          <button
            className="md:hidden text-blue-600 text-2xl mr-2"
            onClick={() => setMenuOpen(!menuOpen)}
            aria-label="Toggle Menu"
          >
            {menuOpen ? <CloseOutlined /> : <MenuOutlined />}
          </button>

          {/* StayWise logo/text */}
          <Link
            href="/"
            className="flex items-center gap-2 font-extrabold text-2xl text-blue-600 hover:text-blue-700 transition"
          >
            <HomeOutlined style={{ fontSize: "28px" }} />
            StayWise
          </Link>

          {/* Desktop Navigation */}
          <div className="hidden md:flex flex-wrap items-center gap-4">
            {navItems.slice(1).map((item) => (
              <Link
                key={item.href}
                href={item.href}
                className={`flex items-center gap-1 px-3 py-1 rounded transition-colors text-blue-600 ${
                  isActive(item.href)
                    ? "text-blue-600"
                    : "text-gray-700 hover:text-blue-500"
                }`}
              >
                {item.icon}
                {item.label}
              </Link>
            ))}
          </div>

          {/* Desktop Auth Links */}
          <span className="hidden md:flex ml-auto gap-3">
            {authItems.map((item) => (
              <Link
                key={item.href}
                href={item.href}
                className={`flex items-center gap-1 px-3 py-1 rounded transition-colors ${
                  isActive(item.href)
                    ? "text-blue-600"
                    : "text-gray-700 hover:text-blue-500"
                }`}
              >
                {item.icon}
                {item.label}
              </Link>
            ))}
          </span>

          {/* Mobile Dropdown */}
          {menuOpen && (
            <div className="absolute top-full left-0 w-full bg-white shadow-lg border-t border-blue-100 flex flex-col items-start md:hidden z-50 animate-slideDown">
              <div className="flex flex-col w-full p-3 space-y-2">
                {[...navItems.slice(1), ...authItems].map((item) => (
                  <Link
                    key={item.href}
                    href={item.href}
                    onClick={() => setMenuOpen(false)}
                    className={`flex items-center gap-2 px-3 py-2 rounded-md w-full ${
                      isActive(item.href)
                        ? "bg-blue-50 text-blue-600 font-semibold"
                        : "text-gray-700 hover:bg-blue-50 hover:text-blue-500"
                    }`}
                  >
                    {item.icon}
                    {item.label}
                  </Link>
                ))}
              </div>
            </div>
          )}
        </nav>

        {/* Main content */}
        <main className="px-1 md:px-1 py-1">{children}</main>

        {/* Animation */}
        <style jsx global>{`
          @keyframes slideDown {
            from {
              opacity: 0;
              transform: translateY(-10px);
            }
            to {
              opacity: 1;
              transform: translateY(0);
            }
          }
          .animate-slideDown {
            animation: slideDown 0.3s ease forwards;
          }
        `}</style>
      </body>
    </html>
  );
}
